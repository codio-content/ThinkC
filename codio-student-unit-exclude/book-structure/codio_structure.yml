workspace:
  directory: /home/codio/workspace/codio-student-unit-exclude/ThinkC
  tex: Main.tex
assets:
  - figs
  - exercises
sections:
  - name: "The way of the program"
    type: chapter
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "What is a programming language?"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "What is a program?"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "What is debugging?"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Formal and natural languages"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "The first program"
    type: section
    transformations:
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/hello.c -o code/hello ./code/hello)
 
          position: 488
    configuration:
      layout: 2-panels
      files:
        - path: "#tabs"
          action: close
        - path: "code/hello.c"
          panel: 0
          action: open
  - name: "Glossary"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Exercises"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
# chapter 2
  - name: "Variables and types"
    type: chapter
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "More output"
    type: section
    transformations:
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/goodbye.c -o code/goodbye ./code/goodbye)
 
          position: 33
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/goodbye.c -o code/goodbye ./code/goodbye 2 )
 
          position: 56
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/goodbye.c -o code/goodbye ./code/goodbye 3 )
 
          position: 75
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/goodbye.c -o code/goodbye ./code/goodbye 4 )
 
          position: 84
    configuration:
      layout: 2-panels
      files:
        - path: "#tabs"
          action: close
        - path: "code/goodbye.c"
          panel: 0
          action: open
  - name: "Values"
    type: section
    transformations:
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/values.c -o code/values ./code/values)
 
          position: 117
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/values.c -o code/values ./code/values 2 )
 
          position: 135
    configuration:
      layout: 2-panels
      files:
        - path: "#tabs"
          action: close
        - path: "code/values.c"
          panel: 0
          action: open
  - name: "Variables"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Assignment"
    type: section
    transformations:
        - add:  |
                Check out the variables getting assigned using the code visualizer in the bottom-left panel.
 
          position: 222
    configuration:
      layout: 3-cell
      files:
        - path: "#tabs"
          action: close
        - path: "code/hello.c"
          panel: 0
          action: open
        - path: "#tutor: code/hello.c"
          panel: 1
          action: open
  - name: "Outputting variables"
    type: section
    transformations:
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/output.c -o code/output ./code/output)
 
          position: 309
        - add:  |
            {Run!}(sh .guides/bg.sh gcc code/output.c -o code/output ./code/output 2 )
 
          position: 345
    configuration:
      layout: 2-panels
      files:
        - path: "#tabs"
          action: close
        - path: "code/output.c"
          panel: 0
          action: open
  - name: "Keywords"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Operators"
    type: section
    #todo
  - name: "Order of operations"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Operators for characters"
    type: section
    #todo
  - name: "Composition"
    type: section
    #todo
  - name: "Glossary"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Exercises"
    type: section
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
# chapter 3
  - name: "Function"
    type: chapter
    configuration:
      layout: 1-panel
      files:
          - path: "#tabs"
            action: close
  - name: "Floating-point"
    type: section
  - name: "Constants"
    type: section
  - name: "Converting from double to int"
    type: section
  - name: "Math functions"
    type: section
  - name: "Composition"
    type: section
  - name: "Adding new functions"
    type: section
  - name: "Definitions and uses"
    type: section
  - name: "Programs with multiple functions"
    type: section
  - name: "Parameters and arguments"
    type: section
  - name: "Parameters and variables are local"
    type: section
  - name: "Functions with multiple parameters"
    type: section
  - name: "Functions with results"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 4
  - name: "Conditionals and recursion"
    type: chapter
  - name: "Conditional execution"
    type: section
  - name: "The modulus operator"
    type: section
  - name: "Alternative execution"
    type: section
  - name: "Chained conditionals"
    type: section
  - name: "Nested conditionals"
    type: section
  - name: "The return statement"
    type: section
  - name: "Recursion"
    type: section
  - name: "Infinite recursion"
    type: section
  - name: "Stack diagrams for recursive functions"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 5
  - name: "Fruitful functions"
    type: chapter
  - name: "Return values"
    type: section
  - name: "Program development"
    type: section
  - name: "Composition"
    type: section
  - name: "Boolean values"
    type: section
  - name: "Boolean variables"
    type: section
  - name: "Logical operators"
    type: section
  - name: "Bool functions"
    type: section
  - name: "Returning from main()"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 6
  - name: "Iteration"
    type: chapter
  - name: "Multiple assignment"
    type: section
  - name: "Iteration"
    type: section
  - name: "The while statement"
    type: section
  - name: "Tables"
    type: section
  - name: "Two-dimensional tables"
    type: section
  - name: "Encapsulation and generalization"
    type: section
  - name: "Functions"
    type: section
  - name: "More encapsulation"
    type: section
  - name: "Local variables"
    type: section
  - name: "More generalization"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 7
  - name: "Arrays"
    type: chapter
  - name: "Increment and decrement operators"
    type: section
  - name: "Accessing elements"
    type: section
  - name: "Copying arrays"
    type: section
  - name: "for loops"
    type: section
  - name: "Array length"
    type: section
  - name: "Random numbers"
    type: section
  - name: "Statistics"
    type: section
  - name: "Array of random numbers"
    type: section
  - name: "Passing an array to a function"
    type: section
  - name: "Counting"
    type: section
  - name: "Checking the other values"
    type: section
  - name: "A histogram"
    type: section
  - name: "A single-pass solution"
    type: section
  - name: "Random seeds"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 8
  - name: "Strings and things"
    type: chapter
  - name: "Containers for strings"
    type: section
  - name: "String variables"
    type: section
  - name: "Extracting characters from a string"
    type: section
  - name: "Length"
    type: section
  - name: "Traversal"
    type: section
  - name: "Finding a  character in a string"
    type: section
  - name: "Pointers and Addresses"
    type: section
  - name: "String concatenation"
    type: section
  - name: "Assigning new values to string variables"
    type: section
  - name: "strings are not comparable"
    type: section
  - name: "Character classification"
    type: section
  - name: "Getting user input"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# chapter 9
  - name: "Structures"
    type: chapter
  - name: "Compound values"
    type: section
  - name: "Point objects"
    type: section
  - name: "Accessing member variables"
    type: section
  - name: "Operations on structures"
    type: section
  - name: "Structures as parameters"
    type: section
  - name: "Call by value"
    type: section
  - name: "Call by reference"
    type: section
  - name: "Rectangles"
    type: section
  - name: "Structures as return types"
    type: section
  - name: "Passing other types by reference"
    type: section
  - name: "Glossary"
    type: section
  - name: "Exercises"
    type: section
# appendix a
  - name: "Coding Style"
    type: chapter
  - name: "A short guide on style"
    type: section
  - name: "Naming conventions and capitalization rules"
    type: section
  - name: "Bracing style"
    type: section
  - name: "Layout"
    type: section
# appendix b
  - name: "ASCII-Table"
    type: chapter
